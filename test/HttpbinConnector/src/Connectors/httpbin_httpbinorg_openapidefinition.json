{
  "basePath": "/",
  "definitions": {},
  "host": "httpbin.org",
  "info": {
    "contact": {
      "email": "me@kennethreitz.org",
      "name": "Kenneth Reitz",
      "url": "https://kennethreitz.org"
    },
    "description": "A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>",
    "title": "httpbin.org",
    "version": "0.9.2"
  },
  "paths": {
    "/absolute-redirect/{n}": {
      "get": {
        "operationId": "getAbsoluteRedirectN",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "Absolutely 302 Redirects n times.",
        "tags": [
          "Redirects"
        ]
      }
    },
    "/anything": {
      "delete": {
        "operationId": "deleteAnything",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ]
      },
      "get": {
        "operationId": "getAnything",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ]
      },
      "patch": {
        "operationId": "patchAnything",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ]
      },
      "post": {
        "operationId": "postAnything",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ]
      },
      "put": {
        "operationId": "putAnything",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ]
      }
    },
    "/anything/{anything}": {
      "delete": {
        "operationId": "deleteAnythingByPath",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anything",
            "type": "string",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getAnythingByPath",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anything",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "patchAnythingByPath",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anything",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "postAnythingByPath",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anything",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "putAnythingByPath",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Anything passed in request"
          }
        },
        "summary": "Returns anything passed in request data.",
        "tags": [
          "Anything"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anything",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/base64/{value}": {
      "get": {
        "operationId": "getBase64DecodedValue",
        "parameters": [
          {
            "default": "SFRUUEJJTiBpcyBhd2Vzb21l",
            "in": "path",
            "name": "value",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Decoded base64 content."
          }
        },
        "summary": "Decodes base64url-encoded string.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/basic-auth/{user}/{passwd}": {
      "get": {
        "operationId": "getBasicAuthenticated",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using HTTP Basic Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/bearer": {
      "get": {
        "operationId": "getBearerAuthenticated",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using bearer authentication.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/brotli": {
      "get": {
        "operationId": "getBrotlyEncodedData",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Brotli-encoded data."
          }
        },
        "summary": "Returns Brotli-encoded data.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/bytes/{n}": {
      "get": {
        "operationId": "getRandomBytes",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Bytes."
          }
        },
        "summary": "Returns n random bytes generated with given seed",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/cache": {
      "get": {
        "operationId": "getCachedResponse",
        "parameters": [
          {
            "in": "header",
            "name": "If-Modified-Since",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cached response"
          },
          "304": {
            "description": "Modified"
          }
        },
        "summary": "Returns a 304 if an If-Modified-Since header or If-None-Match is present. Returns the same as a GET otherwise.",
        "tags": [
          "Response inspection"
        ]
      }
    },
    "/cache/{value}": {
      "get": {
        "operationId": "getCacheControlByValue",
        "parameters": [
          {
            "in": "path",
            "name": "value",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cache control set"
          }
        },
        "summary": "Sets a Cache-Control header for n seconds.",
        "tags": [
          "Response inspection"
        ]
      }
    },
    "/cookies": {
      "get": {
        "operationId": "getCookies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Set cookies."
          }
        },
        "summary": "Returns cookie data.",
        "tags": [
          "Cookies"
        ]
      }
    },
    "/cookies/set/{name}/{value}": {
      "get": {
        "operationId": "setCookieByNameValuePair",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "value",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Set cookies and redirects to cookie list."
          }
        },
        "summary": "Sets a cookie and redirects to cookie list.",
        "tags": [
          "Cookies"
        ]
      }
    },
    "/deflate": {
      "get": {
        "operationId": "getDeflateEncodedData",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Defalte-encoded data."
          }
        },
        "summary": "Returns Deflate-encoded data.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/delay/{delay}": {
      "delete": {
        "operationId": "deleteDelayBySeconds",
        "parameters": [
          {
            "in": "path",
            "name": "delay",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A delayed response."
          }
        },
        "summary": "Returns a delayed response (max of 10 seconds).",
        "tags": [
          "Dynamic data"
        ]
      },
      "get": {
        "operationId": "getDelayBySeconds",
        "parameters": [
          {
            "in": "path",
            "name": "delay",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A delayed response."
          }
        },
        "summary": "Returns a delayed response (max of 10 seconds).",
        "tags": [
          "Dynamic data"
        ]
      },
      "patch": {
        "operationId": "patchDelayBySeconds",
        "parameters": [
          {
            "in": "path",
            "name": "delay",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A delayed response."
          }
        },
        "summary": "Returns a delayed response (max of 10 seconds).",
        "tags": [
          "Dynamic data"
        ]
      },
      "post": {
        "operationId": "postDelayBySeconds",
        "parameters": [
          {
            "in": "path",
            "name": "delay",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A delayed response."
          }
        },
        "summary": "Returns a delayed response (max of 10 seconds).",
        "tags": [
          "Dynamic data"
        ]
      },
      "put": {
        "operationId": "putDelayBySeconds",
        "parameters": [
          {
            "in": "path",
            "name": "delay",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A delayed response."
          }
        },
        "summary": "Returns a delayed response (max of 10 seconds).",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/delete": {
      "delete": {
        "operationId": "echoDelete",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's DELETE parameters."
          }
        },
        "summary": "The request's DELETE parameters.",
        "tags": [
          "HTTP Methods"
        ]
      }
    },
    "/deny": {
      "get": {
        "operationId": "getDeny",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Denied message"
          }
        },
        "summary": "Returns page denied by robots.txt rules.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}": {
      "get": {
        "operationId": "getDigestAuthenticated1",
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}/{algorithm}": {
      "get": {
        "operationId": "getDigestAuthenticated2",
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "format": "password",
            "required": true
          },
          {
            "default": "MD5",
            "description": "MD5, SHA-256, SHA-512",
            "in": "path",
            "name": "algorithm",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth + Algorithm.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}": {
      "get": {
        "operationId": "getDigestAuthenticated3",
        "description": "allow settings the stale_after argument.\n",
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "format": "password",
            "required": true
          },
          {
            "default": "MD5",
            "description": "MD5, SHA-256, SHA-512",
            "in": "path",
            "name": "algorithm",
            "type": "string",
            "required": true
          },
          {
            "default": "never",
            "in": "path",
            "name": "stale_after",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth + Algorithm.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/drip": {
      "get": {
        "operationId": "getDrip",
        "parameters": [
          {
            "default": 2,
            "description": "The amount of time (in seconds) over which to drip each byte",
            "in": "query",
            "name": "duration",
            "required": false,
            "type": "number"
          },
          {
            "default": 10,
            "description": "The number of bytes to respond with",
            "in": "query",
            "name": "numbytes",
            "required": false,
            "type": "integer"
          },
          {
            "default": 200,
            "description": "The response code that will be returned",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "integer"
          },
          {
            "default": 2,
            "description": "The amount of time (in seconds) to delay before responding",
            "in": "query",
            "name": "delay",
            "required": false,
            "type": "number"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "A dripped response."
          }
        },
        "summary": "Drips data over a duration after an optional initial delay.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/encoding/utf8": {
      "get": {
        "operationId": "getUtf8EncodedData",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Encoded UTF-8 content."
          }
        },
        "summary": "Returns a UTF-8 encoded body.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/etag/{etag}": {
      "get": {
        "operationId": "getByEtag",
        "parameters": [
          {
            "in": "path",
            "name": "etag",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "If-Match",
            "type": "string",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Normal response"
          },
          "412": {
            "description": "match"
          }
        },
        "summary": "Assumes the resource has the given etag and responds to If-None-Match and If-Match headers appropriately.",
        "tags": [
          "Response inspection"
        ]
      }
    },
    "/get": {
      "get": {
        "operationId": "echoParameters",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's query parameters."
          }
        },
        "summary": "The request's query parameters.",
        "tags": [
          "HTTP Methods"
        ]
      }
    },
    "/gzip": {
      "get": {
        "operationId": "getGzipEncodedData",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "GZip-encoded data."
          }
        },
        "summary": "Returns GZip-encoded data.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/headers": {
      "get": {
        "operationId": "echoHeaders",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's headers."
          }
        },
        "summary": "Return the incoming request's HTTP headers.",
        "tags": [
          "Request inspection"
        ]
      }
    },
    "/hidden-basic-auth/{user}/{passwd}": {
      "get": {
        "operationId": "getHiddenBasicAuthenticated",
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "404": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using HTTP Basic Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/html": {
      "get": {
        "operationId": "getHtmlData",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "An HTML page."
          }
        },
        "summary": "Returns a simple HTML document.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/image": {
      "get": {
        "operationId": "getImage",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "type": "string",
            "enum": [
              "image/webp",
              "image/svg+xml",
              "image/jpeg",
              "image/png",
              "image/*"
            ],
            "x-ms-summary": "format"
          }
        ],
        "produces": [
          "image/webp",
          "image/svg+xml",
          "image/jpeg",
          "image/png",
          "image/*"
        ],
        "responses": {
          "200": {
            "description": "An image."
          }
        },
        "summary": "Returns a simple image of the type suggest by the Accept header.",
        "tags": [
          "Images"
        ]
      }
    },
    "/image/jpeg": {
      "get": {
        "operationId": "getJepgImage",
        "produces": [
          "image/jpeg"
        ],
        "responses": {
          "200": {
            "description": "A JPEG image."
          }
        },
        "summary": "Returns a simple JPEG image.",
        "tags": [
          "Images"
        ]
      }
    },
    "/image/png": {
      "get": {
        "operationId": "getPngImage",
        "produces": [
          "image/png"
        ],
        "responses": {
          "200": {
            "description": "A PNG image."
          }
        },
        "summary": "Returns a simple PNG image.",
        "tags": [
          "Images"
        ]
      }
    },
    "/image/svg": {
      "get": {
        "operationId": "getSvgImage",
        "produces": [
          "image/svg+xml"
        ],
        "responses": {
          "200": {
            "description": "An SVG image."
          }
        },
        "summary": "Returns a simple SVG image.",
        "tags": [
          "Images"
        ]
      }
    },
    "/image/webp": {
      "get": {
        "operationId": "getWebpImage",
        "produces": [
          "image/webp"
        ],
        "responses": {
          "200": {
            "description": "A WEBP image."
          }
        },
        "summary": "Returns a simple WEBP image.",
        "tags": [
          "Images"
        ]
      }
    },
    "/ip": {
      "get": {
        "operationId": "echoIpAddress",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Requester's IP Address."
          }
        },
        "summary": "Returns the requester's IP Address.",
        "tags": [
          "Request inspection"
        ]
      }
    },
    "/json": {
      "get": {
        "operationId": "getJsonEncodedData",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "An JSON document."
          }
        },
        "summary": "Returns a simple JSON document.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/links/{n}/{offset}": {
      "get": {
        "operationId": "getLinksByNumberOffset",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "offset",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "HTML links."
          }
        },
        "summary": "Generate a page containing n links to other pages which do the same.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/patch": {
      "patch": {
        "operationId": "echoPatch",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's PATCH parameters."
          }
        },
        "summary": "The request's PATCH parameters.",
        "tags": [
          "HTTP Methods"
        ]
      }
    },
    "/post": {
      "post": {
        "operationId": "echoPost",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's POST parameters."
          }
        },
        "summary": "The request's POST parameters.",
        "tags": [
          "HTTP Methods"
        ]
      }
    },
    "/put": {
      "put": {
        "operationId": "echoPut",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's PUT parameters."
          }
        },
        "summary": "The request's PUT parameters.",
        "tags": [
          "HTTP Methods"
        ]
      }
    },
    "/range/{numbytes}": {
      "get": {
        "operationId": "getRangedData",
        "parameters": [
          {
            "in": "path",
            "name": "numbytes",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Bytes."
          }
        },
        "summary": "Streams n random bytes generated with given seed, at given chunk size per packet.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/redirect-to": {
      "delete": {
        "operationId": "deleteRedirectTo",
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302/3XX Redirects to the given URL.",
        "tags": [
          "Redirects"
        ]
      },
      "get": {
        "operationId": "getRedirectTo",
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status_code",
            "type": "integer"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302/3XX Redirects to the given URL.",
        "tags": [
          "Redirects"
        ]
      },
      "patch": {
        "operationId": "patchRedirectTo",
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302/3XX Redirects to the given URL.",
        "tags": [
          "Redirects"
        ]
      },
      "post": {
        "operationId": "postRedirectTo",
        "parameters": [
          {
            "in": "formData",
            "name": "url",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status_code",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302/3XX Redirects to the given URL.",
        "tags": [
          "Redirects"
        ]
      },
      "put": {
        "operationId": "putRedirectTo",
        "parameters": [
          {
            "in": "formData",
            "name": "url",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status_code",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302/3XX Redirects to the given URL.",
        "tags": [
          "Redirects"
        ]
      }
    },
    "/redirect/{n}": {
      "get": {
        "operationId": "getRedirectToNTimes",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "302 Redirects n times.",
        "tags": [
          "Redirects"
        ]
      }
    },
    "/relative-redirect/{n}": {
      "get": {
        "operationId": "getRelativeRedirectToNTimes",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "302": {
            "description": "A redirection."
          }
        },
        "summary": "Relatively 302 Redirects n times.",
        "tags": [
          "Redirects"
        ]
      }
    },
    "/robots.txt": {
      "get": {
        "operationId": "getRobotsTxt",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Robots file"
          }
        },
        "summary": "Returns some robots.txt rules.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/status/{codes}": {
      "delete": {
        "operationId": "deleteRespondStatusCode",
        "parameters": [
          {
            "in": "path",
            "name": "codes",
            "type": "array",
            "collectionFormat": "csv",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "100": {
            "description": "Informational responses"
          },
          "200": {
            "description": "Success"
          },
          "300": {
            "description": "Redirection"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "summary": "Return status code or random status code if more than one are given",
        "tags": [
          "Status codes"
        ]
      },
      "get": {
        "operationId": "getRespondStatusCode",
        "parameters": [
          {
            "in": "path",
            "name": "codes",
            "type": "array",
            "collectionFormat": "csv",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "100": {
            "description": "Informational responses"
          },
          "200": {
            "description": "Success"
          },
          "300": {
            "description": "Redirection"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "summary": "Return status code or random status code if more than one are given",
        "tags": [
          "Status codes"
        ]
      },
      "patch": {
        "operationId": "patchRespondStatusCode",
        "parameters": [
          {
            "in": "path",
            "name": "codes",
            "type": "array",
            "collectionFormat": "csv",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "100": {
            "description": "Informational responses"
          },
          "200": {
            "description": "Success"
          },
          "300": {
            "description": "Redirection"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "summary": "Return status code or random status code if more than one are given",
        "tags": [
          "Status codes"
        ]
      },
      "post": {
        "operationId": "postRespondStatusCode",
        "parameters": [
          {
            "in": "path",
            "name": "codes",
            "type": "array",
            "collectionFormat": "csv",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "100": {
            "description": "Informational responses"
          },
          "200": {
            "description": "Success"
          },
          "300": {
            "description": "Redirection"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "summary": "Return status code or random status code if more than one are given",
        "tags": [
          "Status codes"
        ]
      },
      "put": {
        "operationId": "putRespondStatusCode",
        "parameters": [
          {
            "in": "path",
            "name": "codes",
            "type": "array",
            "collectionFormat": "csv",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "100": {
            "description": "Informational responses"
          },
          "200": {
            "description": "Success"
          },
          "300": {
            "description": "Redirection"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "summary": "Return status code or random status code if more than one are given",
        "tags": [
          "Status codes"
        ]
      }
    },
    "/stream-bytes/{n}": {
      "get": {
        "operationId": "getStreamedBytesByN",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Bytes."
          }
        },
        "summary": "Streams n random bytes generated with given seed, at given chunk size per packet.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/stream/{n}": {
      "get": {
        "operationId": "getStreamedJsonDataByN",
        "parameters": [
          {
            "in": "path",
            "name": "n",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Streamed JSON responses."
          }
        },
        "summary": "Stream n JSON responses",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/user-agent": {
      "get": {
        "operationId": "echoUserAgent",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's User-Agent header."
          }
        },
        "summary": "Return the incoming requests's User-Agent header.",
        "tags": [
          "Request inspection"
        ]
      }
    },
    "/uuid": {
      "get": {
        "operationId": "getUUIDv4",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A UUID4."
          }
        },
        "summary": "Return a UUID4.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/xml": {
      "get": {
        "operationId": "getXmlEncodedData",
        "produces": [
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "An XML document."
          }
        },
        "summary": "Returns a simple XML document.",
        "tags": [
          "Response formats"
        ]
      }
    },
    "/connection-parameters/headers": {
      "get": {
        "operationId": "echoConnectionParametersInHeader",
        "responses": {
          "200": {
            "description": "The request's headers."
          }
        },
        "summary": "Return the incoming request's HTTP headers. Applies headers using custom connector policy templates."
      }
    },
    "/connection-parameters/body": {
      "post": {
        "operationId": "echoConnectionParametersInBody",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request's POST parameters."
          }
        },
        "summary": "The request's POST parameters. Applies properties in request body using custom connector policy templates."
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "Testing different HTTP verbs",
      "name": "HTTP Methods"
    },
    {
      "description": "Auth methods",
      "name": "Auth"
    },
    {
      "description": "Generates responses with given status code",
      "name": "Status codes"
    },
    {
      "description": "Inspect the request data",
      "name": "Request inspection"
    },
    {
      "description": "Inspect the response data like caching and headers",
      "name": "Response inspection"
    },
    {
      "description": "Returns responses in different data formats",
      "name": "Response formats"
    },
    {
      "description": "Generates random and dynamic data",
      "name": "Dynamic data"
    },
    {
      "description": "Creates, reads and deletes Cookies",
      "name": "Cookies"
    },
    {
      "description": "Returns different image formats",
      "name": "Images"
    },
    {
      "description": "Returns different redirect responses",
      "name": "Redirects"
    },
    {
      "description": "Returns anything that is passed to request",
      "name": "Anything"
    }
  ]
}
